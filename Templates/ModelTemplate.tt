<#  //To create runtime template change the custom tool proterty of the template from
// TextTemplatingFileGenerator to TextTemplatingFilePreprocessor
//If there is some error with sqldataclient use 
//"dotnet add package Microsoft.Data.SqlClient" to add the package
#>

<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
 
     string GetCSharpType(string sqlType)
    {
        switch (sqlType)
        {
            case "bigint": return "long";
            case "binary": return "byte[]";
            case "bit": return "bool";
            case "char": return "string";
            case "date": return "DateTime";
            case "datetime": return "DateTime";
            case "decimal": return "decimal";
            case "float": return "double";
            case "image": return "byte[]";
            case "int": return "int";
            case "money": return "decimal";
            case "nchar": return "string";
            case "ntext": return "string";
            case "numeric": return "decimal";
            case "nvarchar": return "string";
            case "real": return "float";
            case "smalldatetime": return "DateTime";
            case "smallint": return "short";
            case "smallmoney": return "decimal";
            case "text": return "string";
            case "timestamp": return "byte[]";
            case "tinyint": return "byte";
            case "varbinary": return "byte[]";
            case "varchar": return "string";
            default: return "object";
        }
    }

    #>
namespace Template.Models{
    public class <#=this.ControllerName#>Model
    {
    <# foreach (var column in this.Columns) { #>
<#
               if(!column.Exclude){

                    string columnName = column.ColumnName;
                    string sqlDataType = column.DataType;
                    string csharpDataType = GetCSharpType(sqlDataType);
#>
     public <#=csharpDataType#> <#=columnName#> { get; set; }
<#
          }
          }
                
#>
    }
}

